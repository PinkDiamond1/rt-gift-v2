{"version":3,"sources":["main.js"],"names":["blogAbiDefinition","blogBytecode","blogAddress","window","addEventListener","console","log","web3","Web3","currentProvider","providers","HttpProvider","checkConnection","getActiveAcc","grabContracts","isConnected","alert","estimateGas","message","post","loadPosts","getTokenBalance","account","bal","tokenContract","balanceOf","call","from","toDecimal","getETHBalance","eth","getBalance","accounts","blogContract","Contract","gasPrice","tokenAbiDefinition","tokenAddress"],"mappings":";;AACA,IAAMA,oBAAoB,EAA1B;AACA,IAAMC,eAAe,otBAArB;AACA,IAAMC,cAAc,4CAApB;;AAEAC,OAAOC,gBAAP,CAAwB,MAAxB,EAAgC,YAAW;AACvCC,YAAQC,GAAR,CAAY,WAAZ;AACA;AACA,QAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAC7B;AACAF,gBAAQC,GAAR,CAAYC,IAAZ;AACAJ,eAAOI,IAAP,GAAc,IAAIC,IAAJ,CAASD,KAAKE,eAAd,CAAd;AACAJ,gBAAQC,GAAR,CAAY,sBAAZ;AACH,KALD,MAKO;AACHD,gBAAQC,GAAR,CAAYC,IAAZ;AACAF,gBAAQC,GAAR,CAAY,iDAAZ;AACAH,eAAOI,IAAP,GAAc,IAAIC,IAAJ,CAAS,IAAIA,KAAKE,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAd;AACH;AACD;AACA,QAAGC,iBAAH,EAAsB;AAClBP,gBAAQC,GAAR,CAAYO,cAAZ;AACAC;AACH;AACJ,CAlBD;;AAoBA,SAASF,eAAT,GAA2B;AACvB;AACA,QAAIT,OAAOI,IAAP,IAAeJ,OAAOI,IAAP,CAAYQ,WAAZ,EAAnB,EAA8C;AAC1CV,gBAAQC,GAAR,CAAY,WAAZ;AACA,eAAO,IAAP;AACH;AACDD,YAAQC,GAAR,CAAY,gDAAZ;AACAH,WAAOa,KAAP,CAAa,4IAAb;AACA,WAAO,KAAP;AACH;;AAED,SAASC,WAAT,CAAqBC,OAArB,EAA8B,CAE7B;;AAED,SAASC,IAAT,CAAcD,OAAd,EAAuB,CAEtB;;AAED,SAASE,SAAT,GAAqB,CAEpB;;AAED;;;AAGA,SAASC,eAAT,GAA2B;AACvB,QAAIC,UAAUT,cAAd;AACA,QAAIU,MAAMpB,OAAOqB,aAAP,CAAqBC,SAArB,CAA+BH,OAA/B,EAAwCI,IAAxC,CAA6C,EAACC,MAAML,OAAP,EAA7C,CAAV;AACA,WAAOnB,OAAOI,IAAP,CAAYqB,SAAZ,CAAsBL,GAAtB,CAAP;AACH;;AAED;;;AAGA,eAAeM,aAAf,GAA+B;AAC3B,QAAIP,UAAUT,cAAd;AACA,QAAIU,MAAM,MAAMpB,OAAOI,IAAP,CAAYuB,GAAZ,CAAgBC,UAAhB,CAA2BT,OAA3B,CAAhB;AACAjB,YAAQC,GAAR,CAAY,cAAcgB,OAAd,GAAwB,IAAxB,GAA+BnB,OAAOI,IAAP,CAAYqB,SAAZ,CAAsBL,GAAtB,CAA3C;AACA,WAAOpB,OAAOI,IAAP,CAAYqB,SAAZ,CAAsBL,GAAtB,CAAP;AACH;;AAED,SAASV,YAAT,GAAwB;AACpB,WAAOV,OAAOI,IAAP,CAAYuB,GAAZ,CAAgBE,QAAhB,CAAyB,CAAzB,CAAP;AACH;;AAED,SAASlB,aAAT,GAAyB;AACrBX,WAAO8B,YAAP,GAAsB,IAAI1B,KAAKuB,GAAL,CAASI,QAAb,CAAsBlC,iBAAtB,EAAyCE,WAAzC,EAAsD;AACxEyB,cAAMd,cADkE,EAClD;AACtBsB,kBAAU,aAF8D,CAEhD;AAFgD,KAAtD,CAAtB;AAIAhC,WAAOqB,aAAP,GAAuB,IAAIjB,KAAKuB,GAAL,CAASI,QAAb,CAAsBE,kBAAtB,EAA0CC,YAA1C,EAAwD;AAC3EV,cAAMd,cADqE,EACrD;AACtBsB,kBAAU,aAFiE,CAEnD;AAFmD,KAAxD,CAAvB;AAIH","file":"main.js","sourcesContent":["\nconst blogAbiDefinition = '';\nconst blogBytecode = '0x6060604052341561000c57fe5b604051602080610168833981016040528080519060200190919050505b806000819055505b505b610126806100426000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806367e0badb146044578063cd16ecbf146067575bfe5b3415604b57fe5b60516084565b6040518082815260200191505060405180910390f35b3415606e57fe5b60826004808035906020019091905050608f565b005b600060005490505b90565b60006000549050816000819055506000546001026000191681600102600019163373ffffffffffffffffffffffffffffffffffffffff167f108fd0bf2253f6baf35f111ba80fb5369c2e004b88e36ac8486fcee0c87e61ce60405180905060405180910390a45b50505600a165627a7a72305820b86215323334042910c2707668d7cc3c3ec760d2f5962724042482293eba5f6b0029';\nconst blogAddress = '0x925d81c01d878899adbb7d38f84ce9d5284fa2e7';\n\nwindow.addEventListener('load', function() {\n    console.log('Shit runs');\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof web3 !== 'undefined') {\n        // Use Mist/MetaMask's provider\n        console.log(web3);\n        window.web3 = new Web3(web3.currentProvider);\n        console.log('Web3 provider found!');\n    } else {\n        console.log(web3);\n        console.log('Injected web3 was not found! Trying localhost..');\n        window.web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:8545'));\n    }\n    // Now you can start your app & access web3 freely:\n    if(checkConnection()) {\n        console.log(getActiveAcc());\n        grabContracts();\n    }\n})\n\nfunction checkConnection() {\n    // Set the connect status on the app\n    if (window.web3 && window.web3.isConnected()) {\n        console.log('Connected');\n        return true;\n    }\n    console.log('Connection to node could not be estabilished..');\n    window.alert('Connection to a node could not be estabilished. Please setup metamask/mist or a local node at \"http://localhost:8545 and reload the page.\"');\n    return false;\n}\n\nfunction estimateGas(message) {\n    \n}\n\nfunction post(message) {\n    \n}\n\nfunction loadPosts() {\n    \n}\n\n/**\n * Get the token balance of the currently active metamask account (0).\n */\nfunction getTokenBalance() {\n    var account = getActiveAcc();\n    var bal = window.tokenContract.balanceOf(account).call({from: account});\n    return window.web3.toDecimal(bal);\n}\n\n/**\n * Get the balances of the currently active metamask account (0).\n */\nasync function getETHBalance() {\n    var account = getActiveAcc();\n    var bal = await window.web3.eth.getBalance(account);\n    console.log('Balance: ' + account + ': ' + window.web3.toDecimal(bal));\n    return window.web3.toDecimal(bal);\n}\n\nfunction getActiveAcc() {\n    return window.web3.eth.accounts[0];\n}\n\nfunction grabContracts() {\n    window.blogContract = new web3.eth.Contract(blogAbiDefinition, blogAddress, {\n        from: getActiveAcc(), // default from address\n        gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n    });\n    window.tokenContract = new web3.eth.Contract(tokenAbiDefinition, tokenAddress, {\n        from: getActiveAcc(), // default from address\n        gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n    });\n}"]}